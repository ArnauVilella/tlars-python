name: Python Package Build and Publish

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      
      - name: Clean existing build files
        run: |
          # Common clean commands
          find . -name "*.so" -type f -delete
          find . -name "*.o" -type f -delete
          find . -name "*.c" -type f -exec grep -l "Generated by Cython" {} \; -delete
          rm -rf build/
          rm -rf *.egg-info/
      
          # Windows-specific clean
          if ("$env:RUNNER_OS" -eq "Windows") {
            Remove-Item -Recurse -Force *.pyd, *.dll -ErrorAction SilentlyContinue
          }
        shell: pwsh

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Linux-specific armadillo installation
          CIBW_BEFORE_ALL_LINUX: >
            mkdir -p /tmp/build_armadillo && cd /tmp/build_armadillo &&
            curl -L https://sourceforge.net/projects/arma/files/armadillo-12.6.4.tar.xz/download -o armadillo.tar.xz &&
            tar -xf armadillo.tar.xz && cd armadillo* &&
            mkdir build && cd build &&
            cmake .. -DDETECT_HDF5=OFF -DBUILD_SHARED_LIBS=ON &&
            make -j4 && make install &&
            echo "/usr/local/lib64" > /etc/ld.so.conf.d/armadillo.conf &&
            ldconfig

          # Windows-specific armadillo installation using vcpkg
          CIBW_BEFORE_ALL_WINDOWS: >
            git clone https://github.com/Microsoft/vcpkg.git &&
            cd vcpkg &&
            .\\bootstrap-vcpkg.bat &&
            .\\vcpkg integrate install &&
            .\\vcpkg install armadillo[openblas]:x64-windows

          # Environment variables for Windows build
          CIBW_ENVIRONMENT_WINDOWS: >
            VCPKG_ROOT=C:\\vcpkg
            CMAKE_TOOLCHAIN_FILE=C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake

          # Build configuration
          CIBW_SKIP: "pp* *-musllinux* *-manylinux_i686 *-manylinux_aarch64 *-manylinux_ppc64le *-manylinux_s390x"
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_BUILD: >
            pip install -U pip setuptools wheel numpy pybind11

      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist
      
      - uses: actions/upload-artifact@v4
        with:
          path: |
            ./wheelhouse/*.whl
            ./dist/*.tar.gz

  upload_pypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: artifact-download

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Prepare distribution files
        run: |
          mkdir -p dist
          cp artifact-download/wheelhouse/*.whl dist/
          cp artifact-download/dist/*.tar.gz dist/
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}